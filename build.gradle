
plugins {
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.25.0'
}

repositories {
    //mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://jitpack.io')
    }
    

    /* 
    * There are conflicts having multiple repos. 
    * Using local repos results in syntax and conflict errors.
    maven {
        url = uri('https://jitpack.io')
    }
    

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    */
    
}

ext {
    launcherName = "cm-software"
    os = org.gradle.internal.os.OperatingSystem.current()
}

javafx {
  version = '17.0.2'
  modules = [ 'javafx.web', 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
}

jar {
    enabled = true
}



jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        mainClass = "com.cm.cm.Launcher"
        name = project.launcherName
    }

    imageName = "cm-software"
    mergedModuleName = 'com.merged.module'
   mergedModule{
       additive = true
       requires 'jdk.zipfs'
   }
        //JPackage build is meant for windows only
        jpackage {
            installerOptions += [
                    '--vendor', 'Panther Software',
                    '--app-version', '0.0.1'
            ]
            if(os.windows){
                            installerOptions += ['--win-dir-chooser', '--win-menu', '--win-shortcut']
            }
        }


   if(os.windows) {

        targetPlatform("win") {
        addExtraModulePath("C:\\Users\\R4T\\Downloads\\Compressed\\jmods\\win_x64")
    }
   }

   if(os.linux) {
       targetPlatform("linux-x64") {

           jdkHome = '/home/riley/Downloads/Compressed/jdks/jdk17_linux_x64'
           addExtraModulePath("/home/riley/Downloads/Compressed/jmods/linux_x64")
       }

       targetPlatform("win") {
           jdkHome = '/home/riley/Downloads/Compressed/jdks/jdk17_win_x64'
           addExtraModulePath("/home/riley/Downloads/Compressed/jmods/win_x64")
       }
   }
}

application {
    mainModule = 'com.cm.cm'
    mainClass = 'com.cm.cm.Launcher'
}

dependencies {
    implementation 'org.apache.poi:poi:5.2.1'
    implementation 'org.apache.poi:poi-ooxml:5.2.1'
    implementation 'com.github.Dansoftowner:PDFViewerFX:0.8' 
    implementation 'org.apache.xmlbeans:xmlbeans:5.0.1'
    implementation 'io.github.palexdev:virtualizedfx:11.2.4'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.3'
    implementation 'org.update4j:update4j:1.5.9'
    implementation 'io.github.palexdev:materialfx:11.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testImplementation 'org.apache.logging.log4j:log4j-1.2-api:2.14.1'
}


group = 'com.cm'
version = '0.0.1'
description = 'Church Membership to register members'
java.sourceCompatibility = JavaVersion.VERSION_17


task dist {
    dependsOn clean, build, jlinkZip
    description "Calls on clean then runs jlinkZip"
}



defaultTasks 'clean', 'build'



tasks.withType(Tar) {
    compression = Compression.GZIP
    archiveExtension.set("tar.gz")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

